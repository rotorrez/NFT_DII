{"ast":null,"code":"var _jsxFileName = \"/home/rtorrez/Documentos/personal/ntf/NFT_DII/src/pages/home.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport axios from \"axios\";\nimport Web3Modal from \"web3modal\";\nimport Contract from \"../truffle/abis/NFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadContract = async () => {\n  try {\n    //THIS ALLOWS YOU TALK TO BLOCKCHAIN\n    const web3Modal = new Web3Modal({\n      network: \"mainnet\",\n      // optional\n      cacheProvider: true,\n      // optional\n      providerOptions: {} // required\n    });\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const netId = await web3.eth.net.getId();\n    //THIS WILL LOAD YOUR CONTRACT FROM BLOCKCHAIN\n    const contract = new web3.eth.Contract(Contract.abi, Contract.networks[netId].address);\n\n    // GET THE AMOUNT OF NFTs MINTED\n    const totalSupply = await contract.methods.totalSupply().call();\n    console.log(`totalSupply ${totalSupply}`);\n\n    //  UNCOMMENT THIS BLOCK ONCE YOU HAVE MINTED AN NFT\n    /*\n    // THE TOKEN ID YOU WANT TO QUERY\n    const tokenID = 1;\n     // GET THE TOKEN URI\n    // THE URI IS THE LINK TO WHERE YOUR JSON DATA LIVES\n    const uri = await contract.methods.tokenURI(tokenID).call();\n    console.log(\"uri: \", uri);\n     // GET THE OWNER OF A SPECIFIC TOKEN\n    const owner = await contract.methods.ownerOf(tokenID).call();\n    console.log(\"owner: \", owner);\n     // CHECK IF A SPECIFIC TOKEN IS SOLD\n    const sold = await contract.methods.sold(tokenID).call();\n    console.log(\"sold: \", sold);\n     // GET PRICE OF A SPECIFIC TOKEN\n    const price = await contract.methods.price(tokenID).call();\n    console.log(\"price: \", price);\n    // */\n  } catch (e) {\n    console.log(\"error = \", e);\n  }\n};\nconst Home = () => {\n  _s();\n  const [imagePath, updatePath] = useState(null);\n  useEffect(() => {\n    loadContract();\n\n    //  uncomment this to demostrate an NFT image url from ipfs\n    /*   \n       (async () => {\n         try {\n           const YOUR_ID = \"QmNzGKhQ2nTeDf7t5qUCp4Vcq8oPBM7iwU8m1w5BFFH1gv\";\n           const { data: img } = await axios.get(\n             //`https://orange-cheerful-rabbit-307.mypinata.cloud/ipfs/${YOUR_ID}?pinataGatewayToken=LuZ4j3hYuZmbOe2nIxxjkbvoXJNui5I-PgFFA2wYtHx6RfJclrGeMri_cbti9JNS`\n             //`https://orange-cheerful-rabbit-307.mypinata.cloud/ipfs/QmNzGKhQ2nTeDf7t5qUCp4Vcq8oPBM7iwU8m1w5BFFH1gv?pinataGatewayToken=LuZ4j3hYuZmbOe2nIxxjkbvoXJNui5I-PgFFA2wYtHx6RfJclrGeMri_cbti9JNS`\n           );\n           updatePath(img);\n         } catch (e) {\n           console.log(\"swallow error\");\n         }\n       })();\n       // */\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"justify\",\n      width: \"500px\",\n      border: \"8px hotpink solid\",\n      boxShadow: \"0 0 12px rgba(0,0,0,0.5)\",\n      borderRadius: \"20px\",\n      margin: \"100px auto\",\n      fontSize: \"20px\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NFT React Boilerplate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Once you have compiled and migrated the contract with Truffle you will able to talk to your contract using the commands in the loadContract function.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \"If you try to load this page before migrating your contract / Or your wallet is on the wrong network, you will see an error in the console.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"pwqx+DLwaWLRUw6AtjD58Bq4kuI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Web3","axios","Web3Modal","Contract","jsxDEV","_jsxDEV","loadContract","web3Modal","network","cacheProvider","providerOptions","provider","connect","web3","netId","eth","net","getId","contract","abi","networks","address","totalSupply","methods","call","console","log","e","Home","_s","imagePath","updatePath","style","display","flexDirection","textAlign","width","border","boxShadow","borderRadius","margin","fontSize","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/home/rtorrez/Documentos/personal/ntf/NFT_DII/src/pages/home.jsx"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport axios from \"axios\";\nimport Web3Modal from \"web3modal\";\nimport Contract from \"../truffle/abis/NFT.json\";\n\nconst loadContract = async () => {\n  try {\n    //THIS ALLOWS YOU TALK TO BLOCKCHAIN\n    const web3Modal = new Web3Modal({\n      network: \"mainnet\", // optional\n      cacheProvider: true, // optional\n      providerOptions: {}, // required\n    });\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const netId = await web3.eth.net.getId();\n    //THIS WILL LOAD YOUR CONTRACT FROM BLOCKCHAIN\n    const contract = new web3.eth.Contract(\n      Contract.abi,\n      Contract.networks[netId].address\n    );\n\n    // GET THE AMOUNT OF NFTs MINTED\n    const totalSupply = await contract.methods.totalSupply().call();\n    console.log(`totalSupply ${totalSupply}`);\n\n    //  UNCOMMENT THIS BLOCK ONCE YOU HAVE MINTED AN NFT\n    /*\n    // THE TOKEN ID YOU WANT TO QUERY\n    const tokenID = 1;\n\n    // GET THE TOKEN URI\n    // THE URI IS THE LINK TO WHERE YOUR JSON DATA LIVES\n    const uri = await contract.methods.tokenURI(tokenID).call();\n    console.log(\"uri: \", uri);\n\n    // GET THE OWNER OF A SPECIFIC TOKEN\n    const owner = await contract.methods.ownerOf(tokenID).call();\n    console.log(\"owner: \", owner);\n\n    // CHECK IF A SPECIFIC TOKEN IS SOLD\n    const sold = await contract.methods.sold(tokenID).call();\n    console.log(\"sold: \", sold);\n\n    // GET PRICE OF A SPECIFIC TOKEN\n    const price = await contract.methods.price(tokenID).call();\n    console.log(\"price: \", price);\n    // */\n  } catch (e) {\n    console.log(\"error = \", e);\n  }\n};\n\nconst Home = () => {\n  const [imagePath, updatePath] = useState(null);\n  useEffect(() => {\n    loadContract();\n\n    //  uncomment this to demostrate an NFT image url from ipfs\n /*   \n    (async () => {\n      try {\n        const YOUR_ID = \"QmNzGKhQ2nTeDf7t5qUCp4Vcq8oPBM7iwU8m1w5BFFH1gv\";\n        const { data: img } = await axios.get(\n          //`https://orange-cheerful-rabbit-307.mypinata.cloud/ipfs/${YOUR_ID}?pinataGatewayToken=LuZ4j3hYuZmbOe2nIxxjkbvoXJNui5I-PgFFA2wYtHx6RfJclrGeMri_cbti9JNS`\n          //`https://orange-cheerful-rabbit-307.mypinata.cloud/ipfs/QmNzGKhQ2nTeDf7t5qUCp4Vcq8oPBM7iwU8m1w5BFFH1gv?pinataGatewayToken=LuZ4j3hYuZmbOe2nIxxjkbvoXJNui5I-PgFFA2wYtHx6RfJclrGeMri_cbti9JNS`\n        );\n        updatePath(img);\n      } catch (e) {\n        console.log(\"swallow error\");\n      }\n    })();\n    // */\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"justify\",\n        width: \"500px\",\n        border: \"8px hotpink solid\",\n        boxShadow: \"0 0 12px rgba(0,0,0,0.5)\",\n        borderRadius: \"20px\",\n        margin: \"100px auto\",\n        fontSize: \"20px\",\n        padding: \"20px\",\n      }}\n    >\n      <p>NFT React Boilerplate</p>\n      <p>\n        Once you have compiled and migrated the contract with Truffle you will\n        able to talk to your contract using the commands in the loadContract\n        function.\n        <br />\n        <br />\n        <br />\n        If you try to load this page before migrating your contract / Or your\n        wallet is on the wrong network, you will see an error in the console.\n      </p>\n      {imagePath && <img src={imagePath} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}